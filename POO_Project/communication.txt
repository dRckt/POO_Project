///////// FICHIER COMMUNICATION //////////////

Damien:: regarde dans Manager.cs il y a une fonction UpdatePowerOfPowerPlant() avec une partie que tu dois compléter
	Reponse : d'acc je vais voir 






#### Pour Robin ####

J'ai ajouté Interface qui reprend les fonctions pour communiquer avec la console, pour liberer le Manager

Mes remarques sous forme de commentaires dans le code sont de la forme	 // D : ..... (tu peux faire pareil // R : ..... )

proposition Line.cs --> passer maxPower en paramètre de la ligne pour pouvoir avoir des lignes de differentes maxPower
					--> ne pas utiliser isDissipatorLine alors qu'on peut simplement brancher la ligne sur un dissipateur en sortie
					--> Supprimer PowerClaimed, on ne l'utilise pas et ce n'est pas une caractéristique de la ligne de savoir ce qu'on va lui demander de fournir, elle est juste caractérisée par sa puissance actuelle, et c'est le conomateur qui va venir modifier cette valeur
					--> On pourrait se passer des methodes SetInputNode() et SetOutputNode() en passant en paramètres les noeuds 
	Reponse : Pour SetInputNode(), SetOutputNode() et PowerClaimed, je ne sais pas encore si j'en ai besoin car je ne sais pas encore comment faire pour répartir le courant dans les noeud (on en parlera pendant la réunion du 30/12)
				-> sera peut etre supprimé quand jaurai trouvé comment faire
			Pour maxPower, l'idée c'est qu'une ligne à une puissance max par défaut mais qu'on peut la changer direct après création avec SetMaxPower, en soit comme ca ou avec un parametre ca revient au meme d'après moi, donc comme tu préfères
			Pour IsDissipatorLine, pour l'instant c'est une ligne qui es créé en meme temps qu'un noeud de distribution ->tous les noeuds de distribution n on une, on en parle pendant la réunion

Dans le manager, quel est l'interet de differencier les deux fonctions qui permettent de relier un noeud de concentration et un noeud de distribution ?
	Reponse : parce qu'on ne les branche pas ensemble de la meme manière. Un noeud de concentration a par défaut une ligne de sortie dès sa création, et un noeud de distribution une ligne d'entrée
				pour brancher un noeud de distribution à un noeuc de concentration, on créé une nouvelle ligne qu'on ajoute en sortie de la distribution et en entrée de la concentration (d'ou le besoin de donner un nouveau nom en param)
				tandis que pour brancher concentration à distribution, la ligne qui doit relier les 2 existe déjà
				on pourrai évantuellement mettre une if/else ou switch case en début de fonction pour savoir on branche quel type de noeud à quel type de noeud, de sorte a n'avoir qu'une fonction a appeler quand on souhaite brancher 2 noeuds
				mais ca ne changerait pas le fait qu'on les branche ensemble différemment




//Commentaire sur le fonctionnement des lignes/noeuds:
Quand on change le PowerClaimed d'un Consumer:
	appeler directement après la fonction Line.SetPowerClaimed(<nouveau powerClaimed>)

		=> cette fonction met a jour la puissance réclamée sur elle
		=> ET sur son noeud! (s'il y en a un, pass quand celui de central)
		     avec la fonction Node.UpdatePowerClaimed(Line)
	   Les 2 méthodes s'appellent entre elle jusqu'a ce que toutes les lignes jusqu'a la centrale aient été mise a jour

	   Pour mettre a jour les centrales elles n'ont plus qu'a lire la demande sur leur ligne de sortie


Quand un consumer change sa demande:
	appeller la fonction (sur sa ligne) GetInputLine.SetPowerClaimed(<newPowerClaimed);
	 ->tout le reste se met a jour
Quand une centrale change sa production:
	appeller la fonction (sur sa ligne) GetOutputLine.UpdateCurrentPower(<newCurrentPower>);
	-> tout le reste se met a jour


